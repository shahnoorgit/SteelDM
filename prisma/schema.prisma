// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum INTEGRATIONS {
  INSTAGRAM
}

model User {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clerkId      String         @unique
  email        String         @unique
  firstname    String?        @unique
  lastname     String?        @unique
  createdAt    DateTime       @default(now())
  Subscription Subscription?
  automations  Automation[]
  Integrations Integrations[]
}

model Subscription {
  id     String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @unique @db.Uuid
}

model Automation {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String   @default("Untitled")
  createdAt DateTime @default(now())
  active    Boolean  @default(false)
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique @db.Uuid
  Trigger Trigger[]
}

model Integrations {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        INTEGRATIONS @default(INSTAGRAM)
  createdAt   DateTime     @default(now())
  USER        User?        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String?      @db.Uuid
  token       String       @unique
  expiresAt   DateTime
  instagramID String?      @unique
}

model Trigger {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type         String
  Automation   Automation? @relation(fields: [automationId], references: [id],onDelete: Cascade)
  automationId String      @db.Uuid
}


